# Generated by Django 5.2.7 on 2025-10-10 23:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('variants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnnotationSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('version', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True)),
                ('api_url', models.URLField(blank=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AnnotationJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('variant_count', models.PositiveIntegerField()),
                ('processed_count', models.PositiveIntegerField(default=0)),
                ('failed_count', models.PositiveIntegerField(default=0)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('job_config', models.JSONField(blank=True, default=dict)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotations.annotationsource')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VariantAnnotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotation_data', models.JSONField(default=dict)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('is_successful', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='annotations.annotationjob')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotations.annotationsource')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='variants.variant')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='COSMICAnnotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cosmic_id', models.CharField(db_index=True, max_length=50, unique=True)),
                ('mutation_description', models.TextField(blank=True)),
                ('mutation_cds', models.CharField(blank=True, max_length=200)),
                ('mutation_aa', models.CharField(blank=True, max_length=200)),
                ('primary_site', models.CharField(blank=True, max_length=100)),
                ('site_subtype', models.CharField(blank=True, max_length=100)),
                ('primary_histology', models.CharField(blank=True, max_length=100)),
                ('histology_subtype', models.CharField(blank=True, max_length=100)),
                ('sample_name', models.CharField(blank=True, max_length=100)),
                ('sample_source', models.CharField(blank=True, max_length=100)),
                ('tumour_origin', models.CharField(blank=True, max_length=50)),
                ('mutation_frequency', models.FloatField(blank=True, null=True)),
                ('mutation_count', models.PositiveIntegerField(blank=True, null=True)),
                ('cosmic_raw_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('variant_annotation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cosmic_data', to='annotations.variantannotation')),
            ],
            options={
                'ordering': ['cosmic_id'],
            },
        ),
        migrations.CreateModel(
            name='ClinVarAnnotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinvar_id', models.CharField(db_index=True, max_length=50)),
                ('clinical_significance', models.CharField(max_length=50)),
                ('review_status', models.CharField(max_length=50)),
                ('review_date', models.DateField(blank=True, null=True)),
                ('evidence_level', models.CharField(blank=True, max_length=50, null=True)),
                ('phenotype', models.TextField(blank=True)),
                ('inheritance_pattern', models.CharField(blank=True, max_length=50)),
                ('submitter', models.CharField(blank=True, max_length=200)),
                ('submission_date', models.DateField(blank=True, null=True)),
                ('clinvar_raw_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('variant_annotation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='clinvar_data', to='annotations.variantannotation')),
            ],
            options={
                'ordering': ['-review_date', 'clinical_significance'],
            },
        ),
        migrations.CreateModel(
            name='CIViCAnnotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('civic_id', models.CharField(db_index=True, max_length=50)),
                ('evidence_id', models.CharField(blank=True, max_length=50)),
                ('drug_name', models.CharField(max_length=200)),
                ('response_type', models.CharField(max_length=50)),
                ('evidence_level', models.CharField(max_length=20)),
                ('evidence_direction', models.CharField(max_length=20)),
                ('cancer_type', models.CharField(blank=True, max_length=200)),
                ('tissue_type', models.CharField(blank=True, max_length=100)),
                ('evidence_type', models.CharField(blank=True, max_length=50)),
                ('evidence_description', models.TextField(blank=True)),
                ('clinical_trial_id', models.CharField(blank=True, max_length=50)),
                ('civic_raw_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('variant_annotation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='civic_data', to='annotations.variantannotation')),
            ],
            options={
                'ordering': ['drug_name', 'evidence_level'],
            },
        ),
        migrations.CreateModel(
            name='AnnotationCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cache_key', models.CharField(db_index=True, max_length=200, unique=True)),
                ('cached_data', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('hit_count', models.PositiveIntegerField(default=0)),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cached_annotations', to='variants.variant')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['cache_key'], name='annotations_cache_k_395009_idx'), models.Index(fields=['expires_at'], name='annotations_expires_243ca1_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='variantannotation',
            index=models.Index(fields=['variant', 'source'], name='annotations_variant_4e4375_idx'),
        ),
        migrations.AddIndex(
            model_name='variantannotation',
            index=models.Index(fields=['is_successful'], name='annotations_is_succ_2ae536_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='variantannotation',
            unique_together={('variant', 'source')},
        ),
    ]
